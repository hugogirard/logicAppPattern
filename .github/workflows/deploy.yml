name: Deploy

on:
  push:
    paths:
      - 'bicep/**'
  workflow_dispatch:
  
env:
  LOCATION: 'eastus'
  RESOURCE_GROUP_NAME: 'rg-logic-app-pattern'

jobs:
  create-azure-resources:

    runs-on: ubuntu-latest

    outputs:      
      functionProcessorName: ${{ steps.armDeployment.outputs.functionProcessorName }}
      functionDispatcherName: ${{ steps.armDeployment.outputs.functionDispatcherName }}      

    steps:
      
      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIAL }}

      - name: Create Resource Group
        run: |
          az group create -n ${{ env.RESOURCE_GROUP_NAME }} -l ${{ env.LOCATION }}            

      # Temporary step the bicep linter return an error today for the
      # scope in the RBAC assignments
      - name: Convert to ARM template
        run: |
          bicep build ./bicep/main.bicep

      - name: Deploy Azure Resources
        id: armDeployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.RESOURCE_GROUP_NAME }}
          template: ./bicep/main.json
          parameters: location=${{ env.LOCATION }} clientId=${{ secrets.SP_CLIENT_ID }} clientSecret=${{ secrets.SP_CLIENT_SECRET }}

  deploy-function:
    
    needs: create-azure-resources

    runs-on: ubuntu-latest

    env:
      AZURE_WEBAPP_PROCESSOR_PACKAGE_PATH: 'src/function/processor'
      AZURE_WEBAPP_DISPATCHER_PACKAGE_PATH: 'src/function/dispatcher'

    steps:

      - uses: actions/checkout@v2

      - name: Azure Login
        uses: Azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}  

      - name: Setup DotNet 3.1.X Environment
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'    

      - name: 'Building Processor'
        shell: bash
        run: |
          pushd './${{ env.AZURE_WEBAPP_PROCESSOR_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd

      - name: 'Building Dispatcher'
        shell: bash
        run: |
          pushd './${{ env.AZURE_WEBAPP_DISPATCHER_PACKAGE_PATH }}'
          dotnet build --configuration Release --output ./output
          popd          

      - name: 'Deploy Functions Processor'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ needs.create-azure-resources.outputs.functionProcessorName }}
          package: '${{ env.AZURE_WEBAPP_PROCESSOR_PACKAGE_PATH }}/output'

      - name: 'Deploy Functions Dispatcher'
        uses: Azure/functions-action@v1
        id: fa
        with:
          app-name: ${{ needs.create-azure-resources.outputs.functionDispatcherName }}
          package: '${{ env.AZURE_WEBAPP_DISPATCHER_PACKAGE_PATH }}/output'                   
